<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlBBWUxJU1QiPjxGaWVsZCBOYW1lPSJQQVlfSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJFTVBfSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJQQVlfREFZU1dPUktFRCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJQQVlfTk9PRkxFQVZFRCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJQQVlfTEVBVkVEQU1PVU5UIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfTk9PRkFCU0VOVCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJQQVlfQUJTRU5UQU1PVU5UIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfREFZU1RPVEFMIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IlBBWV9SRUdPVEhSUyIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJQQVlfUkVHT1RBTU9VTlQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9SRUdIT0xJREFZT1QiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iUEFZX1JFR0hPTElEQVlPVEFNT1VOVCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX1NQRUNJQUxIT0xJREFZT1QiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iUEFZX1NQRUNJQUxIT0xJREFZT1RBTU9VTlQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9OSUdIVERJRkYiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iUEFZX05JR0hURElGRkFNT1VOVCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX1RPVEFMT1RIT1VSUyIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJQQVlfVE9UQUxPVEFNT1VOVCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX0FMTE9XQU5DRSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX1RBWEFESlVTVE1FTlQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9PVEFESlVTVE1FTlQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV8xM1RITU9OVEhDVVJSUEFZIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfMTNUSE1PTlRIQkFMIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfR1JQU1NQQVkiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9TU1NMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfU1NTQ0FMQU1JVFlMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfUElCSUdMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfUElCSUdDQUxBTUlUWUxPQU4iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9QSUJJR0hPVVNJTkdMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfU1NTX0VNUExPWUVFIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfUElCSUdfRU1QTE9ZRUUiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9QSEVBTFRIX0VNUExPWUVFIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfU1NTX0VNUExPWUVSIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfUElCSUdfRU1QTE9ZRVIiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9QSEVBTFRIX0VNUExPWUVSIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfV0lUSEhPTERJTkciIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9UQVhBREpERURVQ1RJT04iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlBBWV9PVEhFUkRFRFVDVElPTiIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX0NBU0hBRFZBTkNFRCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iUEFZX1RPVEFMREVEVUNUSU9OIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfVE9UQUxUQVhBQkxFSU5DT01FIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfTkVUUEFZIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJQQVlfQ1VUT0ZGREFURUJFR0lOIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iUEFZX0NVVE9GRkRBVEVFTkQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFQURERUQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFVVBEQVRFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkFEREVEQlkiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVVBEQVRFREJZIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9IkNBU0hBRFZBTkNFIj48RmllbGQgTmFtZT0iRU1QX0lEIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iQ1NIX0FEVkFOQ0UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRBVEVBRERFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkRBVEVVUERBVEVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQURERURCWSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJVUERBVEVEQlkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iQ0FTSEFEVkFOQ0VMRURHRVIiPjxGaWVsZCBOYW1lPSJTRVFfTk8iIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJFTVBfSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJQQVJUSUNVTEFSUyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJCRUdfQkFMIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJERUJJVCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iQ1JFRElUIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJFTkRfQkFMIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJBTU9VTlQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRBVEVBRERFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkRBVEVVUERBVEVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQURERURCWSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJVUERBVEVEQlkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iREVEVUNUSU9OUyI+PEZpZWxkIE5hbWU9IkVNUF9JRCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkRFRF9TU1NMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJERURfU1NTQ0FMQU1JVFlMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJERURfUElCSUdMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJERURfUElCSUdDQUxBTUlUWUxPQU4iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRFRF9QSUJJR0hPVVNJTkdMT0FOIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJEQVRFQURERUQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFVVBEQVRFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkFEREVEQlkiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVVBEQVRFREJZIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9IkRFU0lHTkFUSU9OIj48RmllbGQgTmFtZT0iREVTX0lEIiBUeXBlPSJJbnQxNiIgLz48RmllbGQgTmFtZT0iREVTX05BTUUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iREVTX1JBVEUiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRFU19BTExPV0FOQ0UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRBVEVBRERFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkRBVEVVUERBVEVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQURERURCWSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJVUERBVEVEQlkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iRU1QTE9ZRUUiPjxGaWVsZCBOYW1lPSJFTVBfSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJFTVBfRlVMTE5BTUUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRU1QX0xOQU1FIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkVNUF9GTkFNRSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJFTVBfTU5BTUUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRU1QX0FERFJFU1MiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRU1QX0NPTlRBQ1ROTyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJFTVBfQkRBVEUiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJFTVBfREFURUhJUkVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iRU1QX0RFU0lHTkFUSU9OIiBUeXBlPSJJbnQxNiIgLz48RmllbGQgTmFtZT0iRU1QX1RBWFNUQVRVUyIgVHlwZT0iQ2hhciIgLz48RmllbGQgTmFtZT0iRU1QX1BIT1RPIiBUeXBlPSJCeXRlQXJyYXkiIC8+PEZpZWxkIE5hbWU9IkVNUF9TSUdOQVRVUkUiIFR5cGU9IkJ5dGVBcnJheSIgLz48RmllbGQgTmFtZT0iRU1QX1NMIiBUeXBlPSJCeXRlIiAvPjxGaWVsZCBOYW1lPSJFTVBfVkwiIFR5cGU9IkJ5dGUiIC8+PEZpZWxkIE5hbWU9IkRBVEVBRERFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkRBVEVVUERBVEVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQURERURCWSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJVUERBVEVEQlkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iT1ZFUlRJTUUiPjxGaWVsZCBOYW1lPSJPVF9SRUdVTEFSIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Ik9UX1JFR0hPTElEQVkiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iT1RfU1BDTEhPTElEQVkiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iT1RfTklHSFRESUZGIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IkRBVEVBRERFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkRBVEVVUERBVEVEIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQURERURCWSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJVUERBVEVEQlkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0icGF5Z2VuJCI+PEZpZWxkIE5hbWU9ImlkIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImVtcF9pZCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJmX25hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGVzaWduYXRpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0ic3RhdHVzIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImRfd3JrIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImRfbGVhdmUiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0icF9sZWF2ZSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJkX2Fic2VudCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJkX3RvdGFsIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImRfcmF0ZSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJvdF9kZWQiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0icmVnX09UX2hycyIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJob2xfT1RfaHJzIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Im5pZ2h0X09UX2hycyIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJyZWdfT1RfcmF0ZSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJob2xfT1RfcmF0ZSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJuaWdodF9PVF9yYXRlIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9InRvdGFsX09UIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImJvbnVzIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImJvbnVzQmFsYW5jZSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJzc3NfbG9hbiIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJzc3NfY2FsX2xvYW4iIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iaGRtZl9sb2FuIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImhkbWZfY2FsX2xvYW4iIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iaGRtZl9ob3VzaW5nX2xvYW4iIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0ic3NzIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9InBfaWJpZyIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJwX2hlYWx0aCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJzc3NfZW1wbG95ZXIiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0icF9pYmlnX2VtcGxveWVyIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9InBfaGVhbHRoX2VtcGxveWVyIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IndodCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJpbmNlbnRpdmVfYWxsb3dhbmNlIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9InRvdF9kZWQiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iYWRqdXN0bWVudCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJhZGp1c3RtZW50X2NyZWRpdCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJvdF9hZGp1c3RtZW50IiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9ImNvbW1pc3Npb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iYl9wYXkiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iY19hZHZhbmNlZCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJjX2FkdmFuY2VkX2JhbCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJnX3BheSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJuX3BheSIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJkYXRlX3RyYW5zIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImRhdGUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0ibGVhdmVXaXRoUGF5IiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Im92ZXJhbGxkZWR1Y3Rpb24iIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iY29sYSIgVHlwZT0iRG91YmxlIiAvPjwvVmlldz48VmlldyBOYW1lPSJQQVlST0xMQ09ERSI+PEZpZWxkIE5hbWU9IlBBWV9JRCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IlBBWV9DT0RFREVTQyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJQQVlfQ1VUT0ZGREFURUJFR0lOIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iUEFZX0NVVE9GRkRBVEVFTkQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFQURERUQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFVVBEQVRFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkFEREVEQlkiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVVBEQVRFREJZIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9IlNoZWV0NiQiPjxGaWVsZCBOYW1lPSJJRCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJlbXBfaWQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iZl9uYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImFkZHJlc3MiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iY29udGFjdF9ubyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJkX2JpcnRoIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9ImRfaGlyZWQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGVzaWduYXRpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iZW1wX3N0YXR1cyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTdGF0dXMiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0ibHdwIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9Ikxhc3ROYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkZpcnN0TmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJEZXNDb2RlIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlRheENvZGUiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0iU1NTVEFCTEUiPjxGaWVsZCBOYW1lPSJWQUxGUk9NIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJWQUxUTyIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iRVIiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkVFIiBUeXBlPSJEZWNpbWFsIiAvPjwvVmlldz48VmlldyBOYW1lPSJUQVhDT0RFIj48RmllbGQgTmFtZT0iVEFYX0lEIiBUeXBlPSJCeXRlIiAvPjxGaWVsZCBOYW1lPSJUQVhfQ09ERSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUQVhfREVTQyIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJVU0VSUyI+PEZpZWxkIE5hbWU9IlVzZXJJRCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJGdWxsTmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJQYXNzd29yZCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJEYXRlQWRkZWQiIFR5cGU9IkRhdGVUaW1lIiAvPjwvVmlldz48VmlldyBOYW1lPSJ2aWV3X0NBU0hBRFZBTkNFTEVER0VSIj48RmllbGQgTmFtZT0iU2VxTm8iIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJFbXBJRCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IlBhcnRpY3VsYXJzIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkJlZ2lubmluZ0JhbGFuY2UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRlYml0IiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJDcmVkaXQiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkVuZGluZ0JhbGFuY2UiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRhdGVVcGRhdGVkIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iVXBkYXRlZEJ5IiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9InZpZXdfREVEVUNUSU9OUyI+PEZpZWxkIE5hbWU9IklEIiBUeXBlPSJJbnQzMiIgLz48RmllbGQgTmFtZT0iRnVsbE5hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iU1NTTG9hbiIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iU1NTQ2FsTG9hbiIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iSERNRkxvYW4iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkhETUZDYWxMb2FuIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJIRE1GSG91c2luZ0xvYW4iIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IkRhdGVBZGRlZCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkFkZGVkQnkiIFR5cGU9IlN0cmluZyIgLz48L1ZpZXc+PFZpZXcgTmFtZT0idmlld19ERVNJR05BVElPTiI+PEZpZWxkIE5hbWU9IklEIiBUeXBlPSJJbnQxNiIgLz48RmllbGQgTmFtZT0iRGVzaWduYXRpb24iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUmF0ZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBbGxvd2FuY2UiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGF0ZUFkZGVkIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iRGF0ZVVwZGF0ZWQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJBZGRlZEJ5IiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlVwZGF0ZWRCeSIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJ2aWV3X0VNUExPWUVFIj48RmllbGQgTmFtZT0iSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJGdWxsTmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJMYXN0TmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJGaXJzdE5hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iTWlkZGxlTmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBZGRyZXNzIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNvbnRhY3RObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJCaXJ0aERhdGUiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEYXRlSGlyZWQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEZXNpZ25hdGlvbiIgVHlwZT0iSW50MTYiIC8+PEZpZWxkIE5hbWU9IlRheFN0YXR1cyIgVHlwZT0iQ2hhciIgLz48RmllbGQgTmFtZT0iU0wiIFR5cGU9IkJ5dGUiIC8+PEZpZWxkIE5hbWU9IlZMIiBUeXBlPSJCeXRlIiAvPjxGaWVsZCBOYW1lPSJEQVRFQURERUQiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJEQVRFVVBEQVRFRCIgVHlwZT0iRGF0ZVRpbWUiIC8+PEZpZWxkIE5hbWU9IkFEREVEQlkiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iVVBEQVRFREJZIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9InZpZXdfRU1QUGF5cm9sbEluZm8iPjxGaWVsZCBOYW1lPSJJRCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9IkZ1bGxOYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkNvbnRhY3RObyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJEZXNpZ25hdGlvbiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUYXhJRCIgVHlwZT0iQnl0ZSIgLz48RmllbGQgTmFtZT0iVGF4RGVzYyIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJ2aWV3X1BBWVJPTExDT0RFIj48RmllbGQgTmFtZT0iSUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJDb2RlRGVzYyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTdGFydERhdGUiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJFbmREYXRlIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iRGF0ZUFkZGVkIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iQWRkZWRCeSIgVHlwZT0iU3RyaW5nIiAvPjwvVmlldz48VmlldyBOYW1lPSJ2aWV3X1BheXJvbGxMaXN0Ij48RmllbGQgTmFtZT0iUGF5SUQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJGVUxMTkFNRSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJUT1REWVMiIFR5cGU9IkRvdWJsZSIgLz48RmllbGQgTmFtZT0iUkFURSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBTExXTkNFIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlJFR09UIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IlJFR0hPTE9UIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IlNQQ0xIT0xPVCIgVHlwZT0iRG91YmxlIiAvPjxGaWVsZCBOYW1lPSJOR0hUREZGIiBUeXBlPSJEb3VibGUiIC8+PEZpZWxkIE5hbWU9IlJFR09UQU1OVCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJSRUdIT0xBTU5UIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlNQQ0xIT0xBTU5UIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9Ik5HSFRERkZBTU5UIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkkzTU5USCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJHUlNQQVkiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iU1NTIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkhETUYiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUEhFQUxUSCIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTU1NfRVIiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iSE1ERl9FUiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJQSEVBTFRIX0VSIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlNTU0xPQU4iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iU1NTQ0FMTE9BTiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJITURGTE9BTiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJIRE1GQ0FMTE9BTiIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJIRE1GSFNOR0xPQU4iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQ0EiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iV0hUIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9Ik5FVFBBWSIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iU2lnIiBUeXBlPSJTdHJpbmciIC8+PC9WaWV3PjxWaWV3IE5hbWU9InZpZXdfVXNlcnMiPjxGaWVsZCBOYW1lPSJVc2VySUQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRnVsbE5hbWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUGFzc3dvcmQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGF0ZUFkZGVkIiBUeXBlPSJEYXRlVGltZSIgLz48L1ZpZXc+PC9EYXRhU2V0Pg==</value>
  </data>
</root>